package com.sun.hk2.component;

import org.jvnet.hk2.annotations.InhabitantAnnotation;
import org.jvnet.hk2.annotations.Contract;

/**
 * Inhabitants file.
 *
 * <p>
 * Inhabitants file describe inhabitants (objects) that are to be placed into the habitat.
 * This file is generated by the APT processor, which is integrated transparently into
 * the build process by the HK2 maven plugin.
 *
 * <p>
 * The file is by convention placed into <tt>/{@value #PATH}/xyz</tt> where 'xyz'
 * portion is {@link InhabitantAnnotation#value() the identifier of the habitat}.
 * This allows multiple different habitats to be created over the same set of classes.
 * For example, there can be one habitat for the whole GF, then there are smaller habitats
 * for each JAX-WS deployment.
 *
 * <h2>Format of the inhabitants file</h2>
 * <p>
 * The file is a UTF-8 encoded text file, and processing is line-based. A line
 * that starts with '#' is treated as a comment and ignored.
 * Other lines are assumed to be in <tt>key=value,key=value,...</tt> format.
 * <tt>=value</tt> portion is optional, and this can be used to design keys
 * that are conceptually boolean. The same key can appear multiple times.s
 *
 * <p>
 * The following keys are defined:
 *
 * <table>
 * <tr>
 * <td>Key</td>
 * <td>Value</td>
 * </tr>
 *
 * <tr>
 * <td>{@value #CLASS_KEY}</td>
 * <td>
 * The fully qualified class name of the inhabitant.
 * </td>
 * </tr>
 *
 * <tr>
 * <td>{@value #INDEX_KEY}</td>
 * <td>
 * The index under which the inhabitant is registered.
 * Multiple values allowed. A value is of the form:
 * {@code PRIMARYNAME[:SUBNAME]}.
 *
 * This is used for all kinds of indexing needs, including
 * {@link Contract} (where PRIMARYNAME is the FQCN of the contract name
 * and SUBNAME is the component name.)
 * </td>
 * </tr>
 *
 * @author Kohsuke Kawaguchi
 */
public class InhabitantsFile {
    public static final String PATH = "META-INF/inhabitants";

    public static final String CLASS_KEY = "class";
    public static final String INDEX_KEY = "index";
}
