                -----
                The Spring/HK2 Brdige
                -----

The Spring/HK2 Bridge

 The Spring/HK2 Bridge can be used to inject {{{http://www.springsource.com/}Spring}} services
 into HK2 services or inject HK2 services into {{{http://www.springsource.com/}Spring}} services.
 
Table of Contents

 * {{Definitions}}
 
 * {{Injecting Spring services into HK2 services}}
 
 * {{Injecting HK2 services into Spring services}}

 []

{Definitions}

 * A {{{http://www.springsource.com/}Spring}} service is a service that is instantiated (created) by
   {{{http://www.springsource.com/}Spring}}

 * An HK2 service is a service that is instantiated (created) by HK2

 []
 
{Injecting Spring services into HK2 services}

 {{{http://www.springsource.com/}Spring}} services can be injected into any injection point in HK2.  In order to do this
 you must tell HK2 about the {{{http://www.springsource.com/}Spring}}
 {{{http://static.springsource.org/spring/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html}BeanFactory}}
 which has the {{{http://www.springsource.com/}Spring}} bean definitions.  This is
 accomplished in two steps.
 
 In the first step you should have the {{{../nonav/hk2-api/apidocs/org/glassfish/hk2/api/ServiceLocator.html}ServiceLocator}}
 that contains services you wish to be injected with {{{http://www.springsource.com/}Spring}}
 services.  You must initialize this
 {{{../nonav/hk2-api/apidocs/org/glassfish/hk2/api/ServiceLocator.html}ServiceLocator}} with some required
 Spring/HK2 bridge services.  You can do this using the utility class
 {{{../nonav/spring-bridge/apidocs/org/jvnet/hk2/spring/bridge/api/SpringBridge.html}SpringBridge}}.
 This is a code snippet that initializes a
 {{{../nonav/hk2-api/apidocs/org/glassfish/hk2/api/ServiceLocator.html}ServiceLocator}}:
 
+-----------------------
  SpringBridge.getSpringBridge().initializeSpringBridge(aServiceLocator);
+-----------------------

 In the second step you must tell your initialized
 {{{../nonav/hk2-api/apidocs/org/glassfish/hk2/api/ServiceLocator.html}ServiceLocator}} about the
 specific {{{http://www.springsource.com/}Spring}}
 {{{http://static.springsource.org/spring/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html}BeanFactory}}
 that you want it to look for services in.  You do this with the
 {{{../nonav/spring-bridge/apidocs/org/jvnet/hk2/spring/bridge/api/SpringIntoHK2Bridge.html}SpringIntoHK2Bridge}}
 service that was added in the previous step.  The following code snippet adds a
 {{{http://www.springsource.com/}Spring}}
 {{{http://static.springsource.org/spring/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html}BeanFactory}}
 to be searched for services when injecting into HK2 services:
 
+-----------------------
  public void tieBeanFactoryToLocator(ServiceLocator aServiceLocator, BeanFactory springFactory) {
      SpringIntoHK2Bridge springBridge = aServiceLocator.getService(SpringIntoHK2Bridge.class);
      springBridge.bridgeSpringBeanFactory(springFactory);
  }
+-----------------------

 Any {{{http://www.springsource.com/}Spring}}
 {{{http://static.springsource.org/spring/docs/current/javadoc-api/org/springframework/beans/factory/BeanFactory.html}BeanFactory}}
 added with the bridgeSpringBeanFactory method will be searched for services that HK2 cannot otherwise find.
 
 For example, if you have a service called SpringService that is created by
 {{{http://www.springsource.com/}Spring}}, you can inject it into an HK2 service
 (called HK2Service) like this:
 
+---------------------------
  @Service
  public class HK2Service {
      @Inject
      private SpringService springService;
  }
+---------------------------

{Injecting HK2 services into Spring services}

  HK2 services can be injected into {{{http://www.springsource.com/}Spring}} services.  A HK2 service
  can be injected into any place a normal Spring Bean can be injected.  For example, if you have an HK2 service
  named HK2Service that is to be injected
  into a {{{http://www.springsource.com/}Spring}} service (called SpringService) your code
  could look like this:

+---------------------------
  public class SpringService {
      private HK2Service hk2Service;
      
      public void setHK2Service(HK2Service hk2Service) {
          this.hk2Service = hk2Service;
      }
  }
+---------------------------

  All HK2 services are in a {{{http://www.springsource.com/}Spring}}
  {{{http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/beans/factory/config/Scope.html}Scope}}
  that is usually named "hk2".  In order to do this we have provided an implementation of
  {{{http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/beans/factory/config/Scope.html}Scope}}
  called
  SpringScopeImpl.
  SpringScopeImpl
  is a {{{http://www.springsource.com/}Spring}} service
  that either takes a {{{../nonav/hk2-api/apidocs/org/glassfish/hk2/api/ServiceLocator.html}ServiceLocator}} instance
  or the name of a {{{../nonav/hk2-api/apidocs/org/glassfish/hk2/api/ServiceLocator.html}ServiceLocator}} as attributes.
  
  This implementation of
  {{{http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/beans/factory/config/Scope.html}Scope}}
  can be given to any {{{http://www.springsource.com/}Spring}}
  {{{http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/beans/factory/config/ConfigurableBeanFactory.html}ConfigurableBeanFactory}}.
  The usual way this is done is in a {{{http://www.springsource.com/}Spring}} beans.xml.  The following
  stanza adds a
  SpringScopeImpl
  for a
  {{{../nonav/hk2-api/apidocs/org/glassfish/hk2/api/ServiceLocator.html}ServiceLocator}} named HK2ToSpringTest
  into a {{{http://www.springsource.com/}Spring}} beans.xml:
  
+---------------------------
  <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
      <property name="scopes">
          <map>
              <entry key="hk2">
                  <bean class="org.jvnet.hk2.spring.bridge.api.SpringScopeImpl" >
	                  <property name="ServiceLocatorName" value="HK2ToSpringTest" />
	              </bean>
              </entry>
          </map>
      </property>
  </bean>
+---------------------------

  An HK2 service is then defined by adding it to the {{{http://www.springsource.com/}Spring}} beans.xml
  by setting its scope to "hk2".  The id of the HK2 service is formatted as per the
  utility API
  BuilderHelper.createTokenizedFilter.  In the usual case this means that the id of the
  bean is the {{{https://hk2.java.net/nonav/hk2-api/apidocs/org/jvnet/hk2/annotations/Contract.html}Contract}}
  to be looked up (though other things can be specified such as name or qualifiers).  The
  following is an example {{{http://www.springsource.com/}Spring}} beans.xml stanza that
  defines an HK2 service.
  
+---------------------------
    <bean id="org.jvnet.hk2.spring.bridge.test.hk2tospring.HK2Service"
	      class="org.jvnet.hk2.spring.bridge.test.hk2tospring.HK2Service"
	      scope="hk2" />
+---------------------------

  In the stanza above the scope was set to "hk2," implying that the HK2
  SpringScopeImpl will be used to lookup the bean.  This bean can then be injected
  into any other {{{http://www.springsource.com/}Spring}} bean in the normal
  way.  The following stanza injects HK2Service into SpringService:
  
+---------------------------
    <bean id="SpringService" class="org.jvnet.hk2.spring.bridge.test.hk2tospring.SpringService">
	  <property name="HK2Service" ref="org.jvnet.hk2.spring.bridge.test.hk2tospring.HK2Service" />
	</bean>
+---------------------------

  To make it clear, the following is the entire {{{http://www.springsource.com/}Spring}} beans.xml
  which injects HK2Service into SpringService:
  
+---------------------------
  <?xml version="1.0" encoding="UTF-8"?>
  <beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
	
	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="hk2">
                    <bean class="org.jvnet.hk2.spring.bridge.api.SpringScopeImpl" >
	                  <property name="ServiceLocatorName" value="HK2ToSpringTest" />
	                </bean>
                </entry>
            </map>
        </property>
    </bean>
	
	<bean id="org.jvnet.hk2.spring.bridge.test.hk2tospring.HK2Service"
	      class="org.jvnet.hk2.spring.bridge.test.hk2tospring.HK2Service"
	      scope="hk2" />
 
	<bean id="SpringService" class="org.jvnet.hk2.spring.bridge.test.hk2tospring.SpringService">
	  <property name="HK2Service" ref="org.jvnet.hk2.spring.bridge.test.hk2tospring.HK2Service" />
	</bean>
 
  </beans>
+---------------------------