These changes are mostly in the area of bootstrapping of HK2 based system.
These are needed to restore the old behavior which was accidentally changed during HK2 2.x development.

1. ServiceLocator can be created via ModulesRegistry. Such a service locator will be kept in sync with
module system changes.

2. Entry point class Main now accepts ModulesRegistry in its createServiceLocator method.

3. Fixed findStartupService method in Main to handle service name and mainModuleName appropriately.

4. Main now behaves like old HK2.

5. Main now accepts a PopulatorPostProcessor in its createServiceLocator method so that the list of
populators can be customized on a per environment basis.

6. Fixed SingleModulesRegistry to use correct class loader to parse metadata.

7. Habitat now accepts a ServiceLocator in its constructor and binds itself to the given ServiceLocator.

8. HK2/OSGi service bridge is fixed to use Class.forName instead of ClassLoader.loadClass to avoid
NPE which can happen for service classes loaded by boot loader.

9. HK2/OSGi service bridge is fixed to not call methods on service objects in serviceRemoved(). 
Instead it does all necessary processing in serviceAdded method.

10. Use of default service locator has been reduced. ServiceLocators created via Main are anonymous in nature.

These changes are backward incompatible, so we need corresponding changes in downstream projects like GlassFish
before we can integrate this there.
